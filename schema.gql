# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OrgMemberType {
  name: String!
  email: String!
  password: String!
  organisation: String!
}

type DocType {
  type: String!
  path: String!
}

type ContactInfoType {
  email: String
  phone: String
  website: String
  facebook: String
  instagram: String
  twitter: String
}

type LocationType {
  lat: Float!
  lng: Float!
}

type PicType {
  path: String!
}

type DogType {
  name: String!
  dob: DateTime!
  pics: [PicType!]!
  breed: String!
  about: String!
  organisation: OrganisationType!
  weight: Float!
  height: Float!
  usersLiked: [AdopterType!]
  furLength: String!
  temperament: [String!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type OrganisationType {
  name: String!
  about: String!
  dateFounded: DateTime!
  members: [OrgMemberType!]!
  location: LocationType!
  rulesReq: [String!]
  contactInfo: ContactInfoType!
  logo: PicType
}

type AdopterType {
  name: String!
  email: String!
  password: String!
  IDNum: String!
  pic: PicType
  location: LocationType
  documents: [DocType!]
  dogsLiked: [DogType!]
  questionnaire: String!
  distance: Float!
}

input OrgMemberInputType {
  name: String!
  email: String!
  password: String!
  organisation: String!
}

input DocInputType {
  type: String!
  path: String!
}

input ContactInfoInputType {
  email: String
  phone: String
  website: String
  facebook: String
  instagram: String
  twitter: String
}

input LocationInputType {
  lat: Float!
  lng: Float!
}

input PicInputType {
  path: String!
}

input DogInputType {
  name: String!
  dob: DateTime!
  pics: [PicInputType!]!
  breed: String!
  about: String!
  organisation: OrganisationInputType!
  weight: Float!
  height: Float!
  usersLiked: [AdopterInputType!]
  furLength: String!
  temperament: [String!]!
}

input OrganisationInputType {
  name: String!
  about: String!
  dateFounded: DateTime!
  members: [OrgMemberInputType!]!
  location: LocationInputType!
  rulesReq: [String!]
  contactInfo: ContactInfoInputType!
  logo: PicInputType
}

input AdopterInputType {
  name: String!
  email: String!
  password: String!
  IDNum: String!
  pic: PicInputType
  location: LocationInputType
  documents: [DocInputType!]
  dogsLiked: [DogInputType!]
  questionnaire: String!
  distance: Float!
}

type Query {
  findPic(id: String!): PicType!
  findDog(id: String!): DogType!
  findDogsByName(name: String!): [DogType!]!
  findDogsByBreed(breed: String!): [DogType!]!
  findDogs: [DogType!]!
  findDogsByOrg(org: OrganisationInputType!): [DogType!]!
  findOrgMembersByOrganisation(org: String!): [OrgMemberType!]!
  login(email: String!, password: String!): [OrgMemberType!]!
  emailExists(email: String!): [Boolean!]!
}

type Mutation {
  createOrg(org: OrganisationInputType!): OrganisationType!
  updateOrg(name: String!, org: OrganisationInputType!): OrganisationType!
  deleteOrg(name: String!): OrganisationType!
  createOrgMember(member: OrgMemberInputType!): OrgMemberType!
  updateOrgMember(email: String!, member: OrgMemberInputType!): OrgMemberType!
  deleteOrgMember(email: String!): OrgMemberType!
  createDog(dog: DogInputType!): DogType!
  updateDog(id: String!, dog: DogInputType!): DogType!
  deleteDog(id: String!): DogType!
  createPic(pic: PicInputType!): PicType!
  updatePic(id: String!, pic: PicInputType!): PicType!
  deletePic(id: String!): PicType!
  createLocation(location: LocationInputType!): LocationType!
  updateLocation(id: String!, location: LocationInputType!): LocationType!
  deleteLocation(id: String!): LocationType!
  createContactInfo(contactInfo: ContactInfoInputType!): ContactInfoType!
  updateContactInfo(id: String!, contactInfo: ContactInfoInputType!): ContactInfoType!
  deleteContactInfo(id: String!): ContactInfoType!
  createDoc(doc: DocInputType!): DocType!
  updateDoc(id: String!, doc: DocInputType!): DocType!
  deleteDoc(id: String!): DocType!
  createAdopter(adopter: AdopterInputType!): AdopterType!
  updateAdopter(email: String!, adopter: AdopterInputType!): AdopterType!
  deleteAdopter(email: String!): AdopterType!
}